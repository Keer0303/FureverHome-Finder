{"ast":null,"code":"export default {\n  name: \"UserPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  methods: {\n    update() {\n      // Save the current user information to the database\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          // Successfully updated\n          this.$message.success('Saved successfully');\n\n          // Update the cached user information in the browser\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          // Trigger parent data update\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // Replace the user's avatar property with the link to the uploaded image\n      this.$set(this.user, 'avatar', response.data);\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","methods","update","$request","put","then","res","code","$message","success","setItem","stringify","$emit","error","msg","handleAvatarSuccess","response","file","fileList","$set"],"sources":["src/views/manager/UserPerson.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"user-card\">\r\n      <el-form :model=\"user\" label-width=\"100px\" class=\"user-form\">\r\n        <div class=\"avatar-upload-container\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n        <el-form-item label=\"Username\" prop=\"username\">\r\n          <el-input\r\n              v-model=\"user.username\"\r\n              placeholder=\"Username\"\r\n              disabled\r\n              class=\"input-field\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Name\" prop=\"name\">\r\n          <el-input\r\n              v-model=\"user.name\"\r\n              placeholder=\"Name\"\r\n              class=\"input-field\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Phone\" prop=\"phone\">\r\n          <el-input\r\n              v-model=\"user.phone\"\r\n              placeholder=\"Phone\"\r\n              class=\"input-field\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Email\" prop=\"email\">\r\n          <el-input\r\n              v-model=\"user.email\"\r\n              placeholder=\"Email\"\r\n              class=\"input-field\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Credit\" prop=\"email\">\r\n          <el-input\r\n              v-model=\"user.account\"\r\n              disabled\r\n              placeholder=\"Credit\"\r\n              class=\"input-field\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <div class=\"button-container\">\r\n          <el-button type=\"primary\" @click=\"update\" class=\"save-button\">\r\n            Save\r\n          </el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserPerson\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      // Save the current user information to the database\r\n      this.$request.put('/user/update', this.user).then(res => {\r\n        if (res.code === '200') {\r\n          // Successfully updated\r\n          this.$message.success('Saved successfully')\r\n\r\n          // Update the cached user information in the browser\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n\r\n          // Trigger parent data update\r\n          this.$emit('update:user')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // Replace the user's avatar property with the link to the uploaded image\r\n      this.$set(this.user, 'avatar', response.data)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-card {\r\n  width: 50%;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.user-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.user-form {\r\n  padding: 30px 50px;\r\n  background-color: #f7f8fa;\r\n}\r\n\r\n.avatar-upload-container {\r\n  margin: 15px;\r\n  text-align: center;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.avatar-upload-container:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 2px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 32px;\r\n  color: #8c939d;\r\n  width: 130px;\r\n  height: 130px;\r\n  line-height: 130px;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n  background-color: #e9ebf0;\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.avatar-uploader-icon:hover {\r\n  background-color: #d1d5db;\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.avatar {\r\n  width: 130px;\r\n  height: 130px;\r\n  display: block;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 2px solid #409eff;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.avatar:hover {\r\n  border-color: #66b1ff;\r\n}\r\n\r\n.el-form-item__label {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.input-field {\r\n  border-radius: 5px;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.input-field:focus {\r\n  border-color: #409eff;\r\n  box-shadow: 0 0 5px rgba(64, 158, 255, 0.5);\r\n}\r\n\r\n.button-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #409eff;\r\n  border-color: #409eff;\r\n  transition: background-color 0.3s ease, border-color 0.3s ease;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #66b1ff;\r\n  border-color: #66b1ff;\r\n}\r\n</style>\r\n"],"mappings":"AA+DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAA;MACA;MACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAR,IAAA,EAAAS,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAC,QAAA,CAAAC,OAAA;;UAEA;UACAV,YAAA,CAAAW,OAAA,YAAAb,IAAA,CAAAc,SAAA,MAAAf,IAAA;;UAEA;UACA,KAAAgB,KAAA;QACA;UACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IACAC,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAAvB,IAAA,YAAAoB,QAAA,CAAArB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}