{"ast":null,"code":"export default {\n  name: \"Animal\",\n  data() {\n    return {\n      tableData: [],\n      // All data\n      pageNum: 1,\n      // Current page number\n      pageSize: 10,\n      // Items per page\n      total: 0,\n      name: null,\n      id: null,\n      species: null,\n      gender: null,\n      age: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please enter pet name',\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: 'Please enter pet ID',\n          trigger: 'blur'\n        }],\n        species: [{\n          required: true,\n          message: 'Please enter pet species',\n          trigger: 'blur'\n        }],\n        gender: [{\n          required: true,\n          message: 'Please enter pet gender',\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: 'Please enter pet age',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // Add new data\n      this.form = {}; // Clear form data for new entry\n      this.fromVisible = true; // Open the dialog\n    },\n\n    handleEdit(row) {\n      // Edit data\n      this.form = JSON.parse(JSON.stringify(row)); // Assign data to form, ensure deep copy\n      this.fromVisible = true; // Open the dialog\n    },\n\n    save() {\n      // Save button logic, triggers add or update\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/animal/update' : '/animal/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // Save successful\n              this.$message.success('Save successful');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // Show error message\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // Delete single item\n      this.$confirm('Are you sure you want to delete?', 'Confirm Delete', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/animal/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // Operation successful\n            this.$message.success('Operation successful');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // Show error message\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // Selected rows\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // Batch delete\n      if (!this.ids.length) {\n        this.$message.warning('Please select data');\n        return;\n      }\n      this.$confirm('Are you sure you want to delete these items?', 'Confirm Delete', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/animal/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // Operation successful\n            this.$message.success('Operation successful');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // Show error message\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // Load paginated data\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/animal/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          id: this.id,\n          species: this.species,\n          gender: this.gender,\n          age: this.age\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n        console.log(this.tableData);\n      });\n    },\n    reset() {\n      this.name = null;\n      this.id = null;\n      this.name = null;\n      this.species = null;\n      this.gender = null;\n      this.age = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // Assign uploaded image link to avatar property\n      this.form.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","id","species","gender","age","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","url","method","then","res","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","console","log","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","img"],"sources":["src/views/manager/Animal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\" style=\"padding: 15px; font-size: 20px; font-weight: bold\">\r\n      Animal Information\r\n    </div>\r\n    <div class=\"search\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-select v-model=\"searchBy\" placeholder=\"Search By\">\r\n            <el-option label=\"ID\" value=\"id\"></el-option>\r\n            <el-option label=\"Name\" value=\"name\"></el-option>\r\n            <el-option label=\"Species\" value=\"species\"></el-option>\r\n            <el-option label=\"Gender\" value=\"gender\"></el-option>\r\n            <el-option label=\"Age\" value=\"age\"></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-input v-if=\"searchBy\" :placeholder=\"`Search By ${capitalize(searchBy)}`\" v-model=\"searchValue\"></el-input>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"info\" plain @click=\"search\">Search</el-button>\r\n          <el-button type=\"warning\" plain @click=\"reset\">Reset</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"operation\" v-if=\"user.role !== 'USER'\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">Add New Pet</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">Batch Delete</el-button>\r\n    </div>\r\n\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"img\" label=\"Image\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.img\"\r\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"Name\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"species\" label=\"Species\"></el-table-column>\r\n        <el-table-column prop=\"sex\" label=\"Gender\"></el-table-column>\r\n        <el-table-column prop=\"age\" label=\"Age\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"Status\"></el-table-column>\r\n        <el-table-column prop=\"descr\" label=\"Description\"></el-table-column>\r\n\r\n        <el-table-column v-if=\"user.role !== 'USER'\" label=\"Actions\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">Edit</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=\"del(scope.row.id)\">Delete</el-button>\r\n          </template>\r\n        </el-table-column>\r\n\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <el-dialog title=\"Information\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"120px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"Pet Image\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <el-button type=\"primary\">Upload Image</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item prop=\"name\" label=\"Pet Name\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"sex\" label=\"Pet Gender\">\r\n          <el-select v-model=\"form.sex\" placeholder=\"Select Gender\" style=\"width: 100%\">\r\n            <el-option label=\"Male\" value=\"Male\"></el-option>\r\n            <el-option label=\"Female\" value=\"Female\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"age\" label=\"Pet Age\">\r\n          <el-input v-model=\"form.age\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"species\" label=\"Pet Species\">\r\n          <el-input v-model=\"form.species\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"status\" label=\"Pet Status\">\r\n          <el-select v-model=\"form.status\" placeholder=\"Select Status\" style=\"width: 100%\">\r\n            <el-option label=\"Available\" value=\"Available\"></el-option>\r\n            <el-option label=\"Adopted\" value=\"Adopted\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"descr\" label=\"Pet Description\">\r\n          <el-input type=\"textarea\" :rows=\"4\" v-model=\"form.descr\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Animal\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // All data\r\n      pageNum: 1,   // Current page number\r\n      pageSize: 10,  // Items per page\r\n      total: 0,\r\n      name: null,\r\n      id:null,\r\n      species:null,\r\n      gender:null,\r\n      age:null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          {required: true, message: 'Please enter pet name', trigger: 'blur'},\r\n        ],\r\n        id: [\r\n          {required: true, message: 'Please enter pet ID', trigger: 'blur'},\r\n        ],\r\n        species: [\r\n          {required: true, message: 'Please enter pet species', trigger: 'blur'},\r\n        ],\r\n        gender: [\r\n          {required: true, message: 'Please enter pet gender', trigger: 'blur'},\r\n        ],\r\n        age: [\r\n          {required: true, message: 'Please enter pet age', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    handleAdd() {   // Add new data\r\n      this.form = {}  // Clear form data for new entry\r\n      this.fromVisible = true   // Open the dialog\r\n    },\r\n    handleEdit(row) {   // Edit data\r\n      this.form = JSON.parse(JSON.stringify(row))  // Assign data to form, ensure deep copy\r\n      this.fromVisible = true   // Open the dialog\r\n    },\r\n    save() {   // Save button logic, triggers add or update\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/animal/update' : '/animal/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // Save successful\r\n              this.$message.success('Save successful')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // Show error message\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // Delete single item\r\n      this.$confirm('Are you sure you want to delete?', 'Confirm Delete', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/animal/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // Operation successful\r\n            this.$message.success('Operation successful')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // Show error message\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // Selected rows\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // Batch delete\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Please select data')\r\n        return\r\n      }\r\n      this.$confirm('Are you sure you want to delete these items?', 'Confirm Delete', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/animal/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // Operation successful\r\n            this.$message.success('Operation successful')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // Show error message\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // Load paginated data\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/animal/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n          id: this.id,\r\n          species: this.species,\r\n          gender: this.gender,\r\n          age: this.age,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n\r\n        console.log(this.tableData)\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null\r\n      this.id = null\r\n      this.name = null\r\n      this.species = null\r\n      this.gender = null\r\n      this.age = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // Assign uploaded image link to avatar property\r\n      this.form.img = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}